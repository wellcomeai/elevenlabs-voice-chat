#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ ElevenLabs Voice Chat
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
"""

import os
import sys
import logging
from pathlib import Path

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    issues = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    if sys.version_info < (3, 8):
        issues.append("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
    else:
        print(f"‚úÖ Python {sys.version.split()[0]}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    api_key = os.getenv("ELEVENLABS_API_KEY")
    if not api_key or api_key == "your_api_key_here":
        issues.append("‚ùå ELEVENLABS_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚úÖ ElevenLabs API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω")
        if len(api_key) < 20:
            warnings.append("‚ö†Ô∏è API –∫–ª—é—á –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Agent ID
    agent_id = os.getenv("ELEVENLABS_AGENT_ID")
    if agent_id:
        print(f"‚úÖ Agent ID: {agent_id[:12]}...")
    else:
        warnings.append("‚ö†Ô∏è ELEVENLABS_AGENT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    required_files = ["app.py", "requirements.txt", "index.html"]
    for file in required_files:
        if Path(file).exists():
            print(f"‚úÖ {file}")
        else:
            issues.append(f"‚ùå –§–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    return issues, warnings

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    missing = []
    
    try:
        import fastapi
        print("‚úÖ FastAPI")
    except ImportError:
        missing.append("fastapi")
    
    try:
        import uvicorn
        print("‚úÖ Uvicorn")
    except ImportError:
        missing.append("uvicorn")
    
    try:
        import websockets
        print("‚úÖ WebSockets")
    except ImportError:
        missing.append("websockets")
    
    try:
        import aiohttp
        print("‚úÖ Aiohttp")
    except ImportError:
        missing.append("aiohttp")
    
    return missing

def print_setup_instructions():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print("\n" + "="*60)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï")
    print("="*60)
    
    print("\n1Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ ElevenLabs API –∫–ª—é—á:")
    print("   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://elevenlabs.io/")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Profile Settings")
    print("   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ API Key")
    
    print("\n2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   Linux/Mac:")
    print("   export ELEVENLABS_API_KEY=your_api_key_here")
    print("\n   Windows:")
    print("   set ELEVENLABS_API_KEY=your_api_key_here")
    
    print("\n3Ô∏è‚É£ –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª:")
    print("   ELEVENLABS_API_KEY=your_api_key_here")
    print("   ELEVENLABS_AGENT_ID=your_agent_id")
    
    print("\n4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   pip install -r requirements.txt")

def create_env_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ .env"""
    if not Path(".env.example").exists():
        env_content = """# ElevenLabs Voice Chat Configuration
ELEVENLABS_API_KEY=your_api_key_here
ELEVENLABS_AGENT_ID=agent_01jzwcew2ferttga9m1zcn3js1
PORT=8000
LOG_LEVEL=info
"""
        with open(".env.example", "w") as f:
            f.write(env_content)
        print("‚úÖ –°–æ–∑–¥–∞–Ω .env.example")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ ElevenLabs Voice Chat - –ó–∞–ø—É—Å–∫")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env –µ—Å–ª–∏ –µ—Å—Ç—å
    try:
        from dotenv import load_dotenv
        if Path(".env").exists():
            load_dotenv()
            print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω .env —Ñ–∞–π–ª")
    except ImportError:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    issues, warnings = check_environment()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    missing_deps = check_dependencies()
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω .env
    create_env_template()
    
    # –í—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if warnings:
        print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
        for warning in warnings:
            print(f"   {warning}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if issues or missing_deps:
        print("\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        for issue in issues:
            print(f"   {issue}")
        
        if missing_deps:
            print(f"   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: {', '.join(missing_deps)}")
            print("   üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install -r requirements.txt")
        
        print_setup_instructions()
        
        response = input("\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø—É—Å–∫? (y/N): ")
        if response.lower() != 'y':
            print("üëã –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
            return sys.exit(1)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    port = os.getenv("PORT", 8000)
    print(f"   ‚Ä¢ –ü–æ—Ä—Ç: {port}")
    print(f"   ‚Ä¢ API –∫–ª—é—á: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if os.getenv('ELEVENLABS_API_KEY') else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print(f"   ‚Ä¢ Agent ID: {os.getenv('ELEVENLABS_AGENT_ID', '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é')}")
    
    print(f"\nüîó –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print(f"   ‚Ä¢ http://localhost:{port}")
    print(f"   ‚Ä¢ http://127.0.0.1:{port}")
    
    print("\nüéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("   ‚Ä¢ –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å AI")
    print("   ‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("   ‚Ä¢ –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏")
    print("   ‚Ä¢ Voice Activity Detection")
    print("   ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–±–∏–≤–∞–Ω–∏–π")
    
    print("\n" + "=" * 50)
    print("üé§ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app import main as run_app
        run_app()
        
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω")
        print("   3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        sys.exit(1)

if __name__ == "__main__":
    main()

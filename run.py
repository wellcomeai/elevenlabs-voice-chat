#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ ElevenLabs Voice Assistant
—Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import uvicorn
import sys
import os
import asyncio
import aiohttp
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    issues = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    if sys.version_info < (3, 8):
        issues.append("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
    else:
        print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    required_files = [
        'app.py',
        'static/index.html',
        'requirements.txt'
    ]
    
    for file_path in required_files:
        if not Path(file_path).exists():
            issues.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file_path}")
        else:
            print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_keys = ['ELEVENLABS_API_KEY', 'OPENAI_API_KEY']
    for key in env_keys:
        if not os.getenv(key):
            print(f"‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {key} –Ω–µ –∑–∞–¥–∞–Ω–∞ (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    try:
        import socket
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        result = sock.connect_ex(('127.0.0.1', 8000))
        if result == 0:
            issues.append("‚ùå –ü–æ—Ä—Ç 8000 —É–∂–µ –∑–∞–Ω—è—Ç")
        else:
            print("‚úÖ –ü–æ—Ä—Ç 8000 —Å–≤–æ–±–æ–¥–µ–Ω")
        sock.close()
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç: {e}")
    
    return issues

async def test_api_connections():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å API"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç ElevenLabs
    try:
        elevenlabs_key = os.getenv("ELEVENLABS_API_KEY", "sk_ad652dd64291b883f60472d7719ba49e82b6a43bbe4f3506")
        headers = {'xi-api-key': elevenlabs_key}
        
        async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=10)) as session:
            async with session.get('https://api.elevenlabs.io/v1/voices', headers=headers) as response:
                if response.status == 200:
                    voices = await response.json()
                    print(f"‚úÖ ElevenLabs API —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–æ—Å—Ç—É–ø–Ω–æ –≥–æ–ª–æ—Å–æ–≤: {len(voices.get('voices', []))}")
                else:
                    print(f"‚ùå ElevenLabs API –æ—à–∏–±–∫–∞: {response.status}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ElevenLabs: {e}")
    
    # –¢–µ—Å—Ç OpenAI
    try:
        from openai import OpenAI
        openai_key = os.getenv("OPENAI_API_KEY", "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")
        client = OpenAI(api_key=openai_key, timeout=10)
        
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": "Test"}],
            max_tokens=5
        )
        print("‚úÖ OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI: {e}")

def print_troubleshooting():
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º"""
    print("\nüîß –°–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:")
    print("1. –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º —Ä–µ—á–∏:")
    print("   - –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥—Ä–æ–º–∫–æ")
    print("   - –ó–∞–ø–∏—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω")
    print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä (Chrome/Firefox)")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –¥–ª—è –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç—ã WebRTC")
    
    print("\n2. –ü—Ä–æ–±–ª–µ–º—ã —Å API:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ ElevenLabs")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    print("\n3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("   - –û—Ç–∫–ª—é—á–∏—Ç–µ VPN –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–ª–∞")
    
    print("\n4. –£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π –º–∏–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞")
    print("   - –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ñ–æ–Ω–æ–≤—ã–π —à—É–º")
    print("   - –ì–æ–≤–æ—Ä–∏—Ç–µ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ 15-30 —Å–º –æ—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    print("üöÄ –ó–∞–ø—É—Å–∫ ElevenLabs Voice Assistant (–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    issues = check_environment()
    
    if issues:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        for issue in issues:
            print(f"   {issue}")
        print("\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!")
        return sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    try:
        asyncio.run(test_api_connections())
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
    
    print("\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print("   - –ü–æ—Ä—Ç: 8000")
    print("   - –•–æ—Å—Ç: 0.0.0.0 (–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ)")
    print("   - –ì–æ–ª–æ—Å: Josh (ElevenLabs)")
    print("   - LLM: GPT-4o-mini")
    print("   - TTS: ElevenLabs Flash v2.5")
    print("   - –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ")
    print("   - –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    print("\nüîó –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print("   - http://localhost:8000")
    print("   - http://127.0.0.1:8000")
    if sys.platform == "win32":
        print("   - http://[IP_–∫–æ–º–ø—å—é—Ç–µ—Ä–∞]:8000")
    
    print("\nüí° –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:")
    print("   - –ü—Ä–æ–±–µ–ª: –ù–∞—á–∞—Ç—å/–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
    print("   - Ctrl+C: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
    
    print("\nüéØ –î–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞:")
    print("   - –í–∫–ª—é—á–∏—Ç–µ Debug —Ä–µ–∂–∏–º –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
    print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ —à—É–º–∞")
    print("   - –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –Ω–µ —Å–ø–µ—à–∏—Ç–µ")
    
    print_troubleshooting()
    
    print("\n" + "=" * 60)
    print("üé§ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    try:
        uvicorn.run(
            "app:app",
            host="0.0.0.0", 
            port=8000,
            log_level="info",
            reload=False,
            access_log=True
        )
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å sudo (Linux/Mac)")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (Windows)")
        print("3. –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç –≤ –∫–æ–¥–µ")
        print("4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        sys.exit(1)

if __name__ == "__main__":
    main()
